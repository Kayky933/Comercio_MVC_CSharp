// <auto-generated />
using System;
using Mercado.MVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mercado.MVC.Migrations
{
    [DbContext(typeof(MercadoMVCContext))]
    [Migration("20220227201245_ModificacoesNomesDeCampos")]
    partial class ModificacoesNomesDeCampos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mercado.MVC.Models.CategoriaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAddCategoria")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Mercado.MVC.Models.ClienteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome_Fantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero_Casa")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Razao_Social")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ultima_Modificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Mercado.MVC.Models.EntregaFornecedorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Entrega")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id_Fornecedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Produto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<decimal>("Valor_Unidade")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Fornecedor");

                    b.HasIndex("Id_Produto");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("EntregaFornecedor");
                });

            modelBuilder.Entity("Mercado.MVC.Models.FornecedorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(19)
                        .HasColumnType("nvarchar(19)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome_Fantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero_Casa")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Razao_Social")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ultima_Modificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Whatsapp")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Mercado.MVC.Models.ProdutoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAddProduto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Id_Categoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Preco_Unidade")
                        .HasColumnType("decimal(12,2)");

                    b.Property<double>("Quantidade_Produto")
                        .HasColumnType("float");

                    b.Property<int>("Unidade_De_Medida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Categoria");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Mercado.MVC.Models.UsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Mercado.MVC.Models.VendaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data_Venda")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id_Cliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Produto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Quantidade")
                        .HasColumnType("float");

                    b.Property<decimal>("Valor_Venda")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cliente");

                    b.HasIndex("Id_Produto");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Mercado.MVC.Models.CategoriaModel", b =>
                {
                    b.HasOne("Mercado.MVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mercado.MVC.Models.ClienteModel", b =>
                {
                    b.HasOne("Mercado.MVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mercado.MVC.Models.EntregaFornecedorModel", b =>
                {
                    b.HasOne("Mercado.MVC.Models.FornecedorModel", "Fornecedor")
                        .WithMany("Entregas")
                        .HasForeignKey("Id_Fornecedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mercado.MVC.Models.ProdutoModel", "Produto")
                        .WithMany("Entregas")
                        .HasForeignKey("Id_Produto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mercado.MVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mercado.MVC.Models.FornecedorModel", b =>
                {
                    b.HasOne("Mercado.MVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mercado.MVC.Models.ProdutoModel", b =>
                {
                    b.HasOne("Mercado.MVC.Models.CategoriaModel", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("Id_Categoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mercado.MVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mercado.MVC.Models.VendaModel", b =>
                {
                    b.HasOne("Mercado.MVC.Models.ClienteModel", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("Id_Cliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mercado.MVC.Models.ProdutoModel", "Produto")
                        .WithMany("Vendas")
                        .HasForeignKey("Id_Produto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mercado.MVC.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Mercado.MVC.Models.CategoriaModel", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Mercado.MVC.Models.ClienteModel", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("Mercado.MVC.Models.FornecedorModel", b =>
                {
                    b.Navigation("Entregas");
                });

            modelBuilder.Entity("Mercado.MVC.Models.ProdutoModel", b =>
                {
                    b.Navigation("Entregas");

                    b.Navigation("Vendas");
                });
#pragma warning restore 612, 618
        }
    }
}
